[
  {
    "title": "abstract",
    "content": "<p>a keyword used in a class or method definition, which specifies that the method/class is not going to be instantiated, but should be inherited by other methods or classes</p>",
    "image_url": "",
    "deck": "Java"
  },
  {
    "title": "API (Application Programming Interface)",
    "content": "<p>is the way to expose a set of pre-defined classes and interfaces to external clients to interact with them, without sharing the implementation details</p>",
    "image_url": "",
    "deck": "Java"
  },
  {
    "title": "argument",
    "content": "<p>an input specified in a method call; it can be a literal value, a variable, or an expression</p><p><font color=\"blue\">void foo method(int argument1);</font></p>",
    "image_url": "",
    "deck": "Java"
  },
  {
    "title": "array",
    "content": "<p>a fixed-size collection of data of the same type, which can hold zero or more items</p><p><font color=\"blue\">int[] array = new int[16];</font></p>",
    "image_url": "",
    "deck": "Java"
  },
  {
    "title": "autoboxing",
    "content": "<p>automatic conversion between the primitive types and their corresponding object wrapper classes</p><p><font color=\"blue\">Character a = 'a';</font></p>",
    "image_url": "",
    "deck": "Java"
  },

  {
    "title": "block",
    "content": "<p>code between two matching open and close braces, which is the single logical unit of work inside the application</p>",
    "image_url": "",
    "deck": "Java"
  },
  {
    "title": "boolean",
    "content": "<p>a primitive type, holding only two values – true or false</p><p><font color=\"blue\">boolean condition = false;</font></p>",
    "image_url": "",
    "deck": "Java"
  },
  {
    "title": "break",
    "content": "<p>a statement used to exit a loop/switch statement/labeled block; the application continues execution with the statement immediately following the containing block</font></p>",
    "image_url": "",
    "deck": "Java"
  },
  {
    "title": "byte",
    "content": "<p>a primitive type of the size of eight bits</p>",
    "image_url": "",
    "deck": "Java"
  },
  {
    "title": "bytecode",
    "content": "<p>the instruction set for Java Virtual Machine, created from source files into bytecode by the compiler</p>",
    "image_url": "",
    "deck": "Java"
  },

  {
    "title": "case",
    "content": "<p>a keyword that defines a particular group of statements executed in a switch statement</p>",
    "image_url": "",
    "deck": "Java"
  },
  {
    "title": "casting",
    "content": "<p>conversion from one data type to another</p><p><font color=\"blue\">Object o = \"text\";<br>String str = (String) o;</font></p>",
    "image_url": "",
    "deck": "Java"
  },
  {
    "title": "catch",
    "content": "<p>he block of code inside try/catch statement, responsible for handling exceptions:</p><p><font color=\"blue\">try {<br>&nbsp;&nbsp;// code<br>} catch (Exception e) {<br>&nbsp;&nbsp;// exception handling<br>}</font></p>",
    "image_url": "",
    "deck": "Java"
  },
  {
    "title": "char",
    "content": "<p>a keyword used to declare a variable of single type character</p><p><font color=\"blue\">char a = 'a';</font></p>",
    "image_url": "",
    "deck": "Java"
  },
  {
    "title": "checked exception",
    "content": "<p>an Exception that is caught at the compilation time, usually in the block or thrown in the method header</p>",
    "image_url": "",
    "deck": "Java"
  },

  {
    "title": "class",
    "content": "<p>the core type in Java that defines the implementation of a particular kind of object; it defines instance and class variables and methods, as well as specifies the interfaces it implements and the immediate superclass of the class, by default Object</p><p><font color=\"blue\">public class Foo {}</font></p>",
    "image_url": "",
    "deck": "Java"
  },
  {
    "title": "class method",
    "content": "<p>class member variable stored and accessed as a single instance for all objects of that class</p><p><font color=\"blue\">public static class Foo {<br>}</font></p>",
    "image_url": "",
    "deck": "Java"
  },
  {
    "title": "class variable",
    "content": "<p>a synonym of a static field or a static variable</p>",
    "image_url": "",
    "deck": "Java"
  },
  {
    "title": "classpath",
    "content": "<p>an environment variable or a command-line argument indicating the path searched by the Java compiler and the runtime for class definitions</p>",
    "image_url": "",
    "deck": "Java"
  },
  {
    "title": "comment",
    "content": "<p>a piece of explanatory text ignored by the compiler:</p><font color=\"blue\">// first comment<br>/* comment block */<br>/** documentation */</font></p>",
    "image_url": "",
    "deck": "Java"
  },

  {
    "title": "compiler",
    "content": "<p>a program used to translate source code into the code executed by a computer</p>",
    "image_url": "",
    "deck": "Java"
  },
  {
    "title": "concurrency",
    "content": "<p>it is the ability of a program to run several tasks in parallel, a primary feature of multithreading</p>",
    "image_url": "",
    "deck": "Java"
  },
  {
    "title": "condition",
    "content": "<p>a boolean expression controlling a conditional statement or loop:</p><p><font color=\"blue\">if (condition) {}</font></p>",
    "image_url": "",
    "deck": "Java"
  },
  {
    "title": "constant",
    "content": "<p>a final variable in Java, which means that the reference of it cannot be changed once initialized</p><p><font color=\"blue\">final int number = 20;</font></p>",
    "image_url": "",
    "deck": "Java"
  },
  {
    "title": "constructor",
    "content": "<p>a method inside the class, which creates and initializes objects in it – needs to be public and names the same as the class</p><p><font color=\"blue\">public class Foo {<br><&nbsp;&nbsp;public Foo(){}; // constructor<br>}</font></p>",
    "image_url": "",
    "deck": "Java"
  },

  {
    "title": "continue",
    "content": "<p>a keyword used to resume application execution at the end of the current loop:</p><p><font color=\"blue\">for (int i=1&#59; i&#60;10&#59; i++){<br>&nbsp;&nbsp;for (int j=1&#59; j&#60;10&#59; j++){<br>&nbsp;&nbsp;&nbsp;if (condition) continue&#59;<br>&nbsp;&nbsp;}<br>}</font></p>",
    "image_url": "",
    "deck": "Java"
  },
  {
    "title": "declaration",
    "content": "<p>officially, this is defined as a statement that establishes an identifier and associates attributes with it, without necessarily reserving its storage or providing the implementation</p>",
    "image_url": "",
    "deck": "Java"
  },
  {
    "title": "default",
    "content": "<p>the optional destination used in a switch statement, when neither case statement matches the requested behavior:</p><p><font color=\"blue\">switch (value) {<br>&nbsp;&nbsp;case 1:<br>&nbsp;&nbsp;&nbsp;&nbsp;//some code<br>&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;default:<br>&nbsp;&nbsp;&nbsp;&nbsp;//some code<br>&nbsp;&nbsp;&nbsp;&nbsp;break;<br>}</font></p>",
    "image_url": "",
    "deck": "Java"
  },
  {
    "title": "definition",
    "content": "<p>a declaration that reserves storage (for data) or provides an implementation (for methods)</p>",
    "image_url": "",
    "deck": "Java"
  },
  {
    "title": "deprecation",
    "content": "<p>a class/method/interface that has been made obsolete by later versions of the library or of the language itself; it should not be used as there is no guarantee that it will exist in future versions",
    "image_url": "",
    "deck": "Java"
  },

  {
    "title": "keep on working",
    "content": "<p>https://stackify.com/java-glossary/</p>",
    "image_url": "",
    "deck": "Java"
  }

]
